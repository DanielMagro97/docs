(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{225:function(a,s,t){"use strict";t.r(s);var n=t(0),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"stake-management-in-detail-using-cli"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stake-management-in-detail-using-cli"}},[a._v("#")]),a._v(" Stake Management in detail using CLI")]),a._v(" "),t("p",[a._v("For node operators Oasis node binary offers command line interface tooling for\nvarious native token stake operations.")]),a._v(" "),t("p",[a._v("The following commands are available for running "),t("strong",[a._v("online")]),a._v(" Oasis node on server:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("oasis-node stake info")]),a._v(" shows the native token information,")]),a._v(" "),t("li",[t("code",[a._v("oasis-node stake list")]),a._v(" lists all accounts with positive balance,")]),a._v(" "),t("li",[t("code",[a._v("oasis-node stake account info")]),a._v(" shows detailed account information,")]),a._v(" "),t("li",[t("code",[a._v("oasis-node stake account submit")]),a._v(" submits a pregenerated transaction given the\nfilename.")])]),a._v(" "),t("p",[a._v("In addition the following transaction generation commands are meant to be run\noffline, because signing a transaction requires a private key which "),t("strong",[a._v("should not\nbe accessible")]),a._v(" from outside in any way:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("oasis-node stake account gen_transfer")])]),a._v(" "),t("li",[t("code",[a._v("oasis-node stake account gen_burn")])]),a._v(" "),t("li",[t("code",[a._v("oasis-node stake account gen_escrow")])]),a._v(" "),t("li",[t("code",[a._v("oasis-node stake account gen_reclaim_escrow")])])]),a._v(" "),t("h2",{attrs:{id:"staking-basics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#staking-basics"}},[a._v("#")]),a._v(" Staking basics")]),a._v(" "),t("p",[a._v("We will run the staking operations in a local testing environment. If you are\nalready a validator on a testnet, you can skip this step. All required\nparameters will be passed directly using CLI, so there is no need for a config\nfile. To spin up the Oasis network locally, move to your oasis-core folder and\nrun")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-net-runner/oasis-net-runner "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --net.node.binary go/oasis-node/oasis-node "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --net.runtime.binary target/debug/simple-keyvalue "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --net.runtime.loader target/debug/oasis-core-runtime-loader "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --net.keymanager.binary target/debug/oasis-core-keymanager-runtime\n")])])]),t("p",[a._v("Shortly, three compute nodes, storage nodes and a key manager will start. If you\ntrack the output on the terminal, it should contain a similar line to this:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("level")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("info "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("module")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("net-runner "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("caller")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("root.go:145 "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ts")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2019")]),a._v("-10-25T10:54:09.198642162Z "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("msg")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"client node socket available"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("path")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/tmp/oasis-net-runner236357163/net-runner/network/client-0/internal.sock\n")])])]),t("p",[a._v("In our case "),t("code",[a._v("unix:/tmp/oasis-net-runner236357163/net-runner/network/client-0/internal.sock")]),a._v("\nis the path to the local unix socket of the Oasis node. If you are running a\ntestnet validator node, a similar "),t("code",[a._v("internal.sock")]),a._v(" unix socket exists in your\nserver directory. We will use this address for performing online stake\noperations, so let's store it as "),t("code",[a._v("ADDR")]),a._v(" environmental variable:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ADDR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("unix:/tmp/oasis-net-runner236357163/net-runner/network/client-0/internal.sock\n")])])]),t("p",[a._v("First, let's see what is the native token of our platform:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake info -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\nName: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Buffycoin"')]),a._v("\nSymbol: "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"BUF"')]),a._v("\nTotal supply: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("200000000000")]),a._v("\nCommon pool: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\nStaking threshold "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("entity"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\nStaking threshold "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("validator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\nStaking threshold "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("compute"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\nStaking threshold "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("storage"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(": "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v("\n")])])]),t("p",[a._v("There is a native token named "),t("code",[a._v("Buffycoin")]),a._v(" with symbol "),t("code",[a._v("BUF")]),a._v(" in our environment\nwith total supply of 200 billion. All tokens are allocated in their respective\naccounts and no tokens are in the "),t("em",[a._v("common pool")]),a._v(". Finally we see no staking\nthresholds for any node kind (entity, validator, compute, storage).")]),a._v(" "),t("p",[a._v("Let's list all accounts with positive balance:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake list -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\n4ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35\n")])])]),t("p",[a._v("There exists one account "),t("code",[a._v("4ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35")]),a._v("\nwith positive balance. In our case, this is the so called "),t("em",[a._v("test entity")]),a._v(" account\nfor debugging. Let's get more information about the account:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account info "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.account.id 4ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"TqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"100000000000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"100000000000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("We notice that:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("id")]),a._v(" stores the Base4 encoded address of the account.")]),a._v(" "),t("li",[t("code",[a._v("general_balance")]),a._v(" is the number of tokens which can be spent by a transfer\ntransaction signed by the account's private key.")]),a._v(" "),t("li",[a._v("Each account can also serve as an escrow. "),t("code",[a._v("escrow_balance")]),a._v(" is the number of\ntokens this account contains as an escrow and which can be reclaimed by the\ndepositor. In our environment, both balances have 100 billion tokens.")]),a._v(" "),t("li",[a._v("Any outgoing transaction of the account must have an incremental "),t("code",[a._v("nonce")]),a._v(". In\nour case, the next outgoing transaction of the account will have "),t("code",[a._v("nonce: 0")]),a._v(".")])]),a._v(" "),t("h2",{attrs:{id:"example-burning-tokens"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-burning-tokens"}},[a._v("#")]),a._v(" Example: Burning tokens")]),a._v(" "),t("p",[a._v("We will generate and sign our first transaction. Let's start with "),t("em",[a._v("burn")]),a._v("\ntransaction which destroys the given number of account's tokens. To generate a\nburn transaction of 2000 tokens, sign and store the transaction to file "),t("code",[a._v("b.json")]),a._v(",\ntype:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account gen_burn "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.amount "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.file b.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.nonce "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.fee.gas "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.fee.amount "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --debug.test_entity\n")])])]),t("p",[a._v("We used the following parameters:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--stake.transaction.amount")]),a._v(" specifies the number of tokens,")]),a._v(" "),t("li",[t("code",[a._v("--stake.transaction.file")]),a._v(" the output filename of the transaction stored in\nJSON format,")]),a._v(" "),t("li",[t("code",[a._v("--stake.transaction.nonce")]),a._v(" the incremental nonce. Since this is our first\ntransaction which changes the account balance, "),t("code",[a._v("nonce")]),a._v(" equals "),t("code",[a._v("0")]),a._v(",")]),a._v(" "),t("li",[t("code",[a._v("--stake.transaction.fee.gas")]),a._v(" is the maximum amount of gas we allow this\ntransaction to spend,")]),a._v(" "),t("li",[t("code",[a._v("--stake.transaction.fee.amount")]),a._v(" is the fee in tokens we will pay for this\ntransaction,")]),a._v(" "),t("li",[t("code",[a._v("--debug.test_entity")]),a._v(" will sign the transaction using the test entity account.\nIf you are running a validator node, you should use "),t("code",[a._v("--entity")]),a._v(" instead and the\ndirectory containing "),t("code",[a._v("entity.json")]),a._v(" with your private key.")])]),a._v(" "),t("p",[a._v("The above generation and signing of the transaction is done offline.")]),a._v(" "),t("p",[a._v("To submit our transaction, we need to copy "),t("code",[a._v("b.json")]),a._v(" where the online Oasis node\nhas access to (e.g. via ssh) and run on server:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account submit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.account.id 4ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.file b.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\n")])])]),t("p",[a._v("The submit operation above requires two parameters:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--stake.transaction.file")]),a._v(" is the input filename of the transaction,")]),a._v(" "),t("li",[t("code",[a._v("--stake.account.id")]),a._v(" is the staking account which pays the transaction fee and\nserves as an escrow. This accounts gets slashed, if invalid transaction is\nsubmitted.")])]),a._v(" "),t("p",[a._v("Finally, let's check the new balance of the account:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account info "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.account.id 4ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"TqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"99999998000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"100000000000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Usually, the new balance is seen immediately, but some transactions (for example\nescrow reclaiming) requires a debonding period so you might need to wait a few\nblocks for the balances to update. Notice that "),t("code",[a._v("2000")]),a._v(" tokens have been deducted\nfrom the "),t("code",[a._v("general_balance")]),a._v(" in our case.")]),a._v(" "),t("h2",{attrs:{id:"example-transferring-tokens"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-transferring-tokens"}},[a._v("#")]),a._v(" Example: Transferring tokens")]),a._v(" "),t("p",[a._v("Token transfer transaction transfers tokens from the signer's account to the\ngiven destination account. Let's generate a transfer transaction of 1000 tokens\nto account "),t("code",[a._v("5ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account gen_transfer "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.amount "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.file t.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.nonce "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transfer.destination 5ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.fee.gas "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.fee.amount "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --debug.test_entity\n")])])]),t("p",[a._v("We used similar parameters to the ones used for generating the burn transaction:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("--stake.transaction.amount")]),a._v(" is the number of tokens to transfer,")]),a._v(" "),t("li",[t("code",[a._v("--stake.transaction.file")]),a._v(" is the output filename,")]),a._v(" "),t("li",[t("code",[a._v("--stake.transaction.nonce")]),a._v(" is the incremental nonce. In our case, this is the\nsecond transaction on the account, thus "),t("code",[a._v("nonce")]),a._v(" equals "),t("code",[a._v("1")]),a._v(",")]),a._v(" "),t("li",[t("code",[a._v("--stake.transfer.destination")]),a._v(" is a hex-encoded address of the receiving\naccount of tokens,")]),a._v(" "),t("li",[t("code",[a._v("--debug.test_entity")]),a._v(", "),t("code",[a._v("--stake.transaction.fee.gas")]),a._v(", and "),t("code",[a._v("--stake.transaction.fee.amount")]),a._v("\nbehave the same as before.")])]),a._v(" "),t("p",[a._v("Let's submit the transaction stored in "),t("code",[a._v("t.json")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account submit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.account.id 4ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.file t.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\n")])])]),t("p",[a._v("Finally let's list all the accounts and their balances by adding "),t("code",[a._v("-v")]),a._v(" flag for\nincreased verbosity:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake list -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"TqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"99999997000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"100000000000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"XqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Notice another 1000 tokens have been deducted from the first account and\ntransferred to the second one.")]),a._v(" "),t("h2",{attrs:{id:"example-escrowing-tokens-and-reclaiming-them"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#example-escrowing-tokens-and-reclaiming-them"}},[a._v("#")]),a._v(" Example: Escrowing tokens and reclaiming them")]),a._v(" "),t("p",[a._v("In the third example we will put 3000 tokens to an escrow account\n"),t("code",[a._v("6ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35")]),a._v(" and then\nreclaim them. First, let's generate an escrow transaction and store it to "),t("code",[a._v("e.json")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account gen_escrow "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.amount "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.file e.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.nonce "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.escrow.account 6ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.fee.gas "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --stake.transaction.fee.amount "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n --debug.test_entity\n")])])]),t("p",[a._v("Let's submit the escrow transaction and list the accounts:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account submit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.account.id 4ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.file e.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\n$ ./go/oasis-node/oasis-node stake list -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v(" -v\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"TqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"99999994000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"100000000000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"XqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"3000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Notice 3000 tokens have been deducted from the first account's "),t("code",[a._v("general_balance")]),a._v("\nand added to an "),t("code",[a._v("escrow_balance")]),a._v(" of the third account.")]),a._v(" "),t("p",[a._v("We reclaim 3000 escrowed tokens by generating the reclaim escrow transaction:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account gen_reclaim_escrow "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.amount "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.file r.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.nonce "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.escrow.account 6ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.fee.gas "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1000")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.fee.amount "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --debug.test_entity\n")])])]),t("p",[a._v("Let's submit it and in a few moments list the accounts:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ ./go/oasis-node/oasis-node stake account submit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.account.id 4ea5328f943ef6f66daaed74cb0e99c3b1c45f76307b425003dbc7cb3638ed35 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    --stake.transaction.file r.json "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n    -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v("\n$ ./go/oasis-node/oasis-node stake list -a "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ADDR")]),a._v(" -v\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"TqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"99999997000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"100000000000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":4"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"XqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1000"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"id"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bqUyj5Q+9vZtqu10yw6Zw7HEX3Ywe0JQA9vHyzY47TU="')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"general_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"escrow_balance"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0"')]),a._v(","),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"nonce"')]),a._v(":0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Notice 3000 tokens have been reclaimed by the first account from the third\naccount's "),t("code",[a._v("escrow_balance")]),a._v(". The "),t("code",[a._v("general_balance")]),a._v(" of the first accound is\ncorrectly updated and the "),t("code",[a._v("escrow_balance")]),a._v(" of the third account is now empty.")])])}),[],!1,null,null,null);s.default=e.exports}}]);